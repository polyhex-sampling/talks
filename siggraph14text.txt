SIGGRAPH14 talk text
===========================

== new slide
-- transition inside slide
## comments ##

===========================


== Title

Good morning everyone.
I'll present you a new fast sampling method that can generate distribution with arbitrary user specified spectra.
This work was made in colaboration with people from LIRIS, Stanford and Caltech.



== Problem Statement

Basically, sampling is taking discrete values of a continuous function.
To better evaluate this function, we want the samples to be equally distributed
and to have a greater density of sample in the major parts of the function.
Also, the characteristics of the sample distribution have a big impact on the evaluation quality of the function.



== Why is it essential?

For example, local lack of samples generates a noisy evaluation.
Another issue is the aliasing, resulting from interference between regularities in sampling and regularities in the function to evaluate.



== Context
-- Regular sampling

To choose sample position, a straitforward approach is to take samples on a rectangular grid.
This has the advantage of uniformly sample the whole space.
But it produces strong aliasing artefacts when the sampling frequency is under the Nyquist frequency.
The regularities of this distribution are visible in spectral domain as a grid of peaks.


-- Monte Carlo

Another solution is to choose random position for sample, also known as Monte Carlo method.
This way all frequencies are equally sampled, as can be seen by the constant Fourier spectrum.
But this distribution doesn't garanty a good uniformy and create local holes and heaps of samples.
This lead to noise in the evaluation of the function.



== Previous works: Advanced Methods
-- Poisson Disk

Since eighties, a lot of algorithms have been proposed to enhance the sampling quality for a constant number of samples.
The Poisson Disk methods, also use ramdom sample position.
But to ensure a better uniformity, it add a minimum point-to-point distance constrain.


-- Optimization based

Another class of methods is based on optimization.
The core of these methods is the minimization of an energy function.
Currently, the best quality sampling are obtain by this kind of methods.
Notice that, in spectral domain, there is no frequency peaks, limiting aliasing artefacts.

( All this methods use spatial characteristics to generate sampling.
And the quality of these samplings is mainly judge by the characteristics of their Fourier spectra. ## Blue-noise, anisotropy, no peaks ## )

All this methods aims at generating distribution with the best blue-noise spectrum, but we could need other type of distribution.



== Previous works: General Noise Methods

Since two years, some methods propose to generate a sampling distribution accordingly to a given Fourier spectrum.
It allow to generate a distribution with the best characteristics for a particular application.



== Previous works: Tile-based Methods

Most of advanced sampling methods require lot of computational power and thus are rarely used in applications.
Tile-based methods aim at reducing the sampling complexity while keeping good sampling characteristics.
The principle is to store the sampling distribution through a hierarchical and non-periodic tiling system.
( Then the sampling is reconstructed by generating the tiling. )

Here it is tiling of previous tile-based methods, red dots are the barycenters of each tiles.
The Fourier spectrum of these barycenters contain a lot of peaks that express pattern and regularities in the barycenters distribution.
In the right part of the spectrum, these peaks are circled.
The issue is that even after an optimization of this barycenters, the peaks will still remain because of the inherent regularities of the tiling.
This is the main problem we solved in our article.



== Previous works: Positioning

To sum up, we propose an algorithm as fast as previous tile-based methods that can generate sampling equivalent to best existing sampling methods in term of quality.
We can also control the distribution spectrum through general noise methods.




== Outline


To achieve this goal, we need a hierarchical tiling system.
This system have to be non-periodic and free of strong regularities.
And this tiling must support a sampling system with spectral control.



== Base lattice

The basis of our system is a hexagonal lattice that provide better anisotropy and simpler connectivity than rectangular lattice.
We combine it to a recursive subdivision scheme based on centered hexagonal number that allow to densify the lattice.
From this base we can construct a hierarchical non-periodic tiling system...



== Polyhexes & Subdivision
-- Polyhexes catalog

... by enumerating all possible fixed trihexes
A trihex is a group of three connected hexagons.

-- Subdivision rule

For each of this thihexes, we find a subdivision rule that produce lambda smaller trihexes out of one.
Please see the paper for more detail about this step.
All of this form a closed and finite subdivision system that can produce a tiling.



== Comparison with previous works

The Fourier spectrum of the barycenters of this tiling have a better anisotropy compare to previous used tiling.
( This is due to hexagonal lattice and a greater variety of tiles. )
But we still have some sort of pattern/regularities as shown by the spectral peaks circled in red.
As the tiling is build on multiple subdivision, some alignment arise on the border of the previous levels of tiles. ## not good ##
And it is enough to generate spectral peaks.



== Irregular quasi-hexagonal lattice: hex

To correct this, we introduce some randomness in the basis lattice by shuffling the border at each subdivision.



== Irregular quasi-hexagonal lattice: hextile

We first group hexagon into hextiles.



== Irregular quasi-hexagonal lattice: triple edge modifiers

And we define triple-edge modifiers made of three border each.



== Irregular quasi-hexagonal lattice: one TEM

Each of these triple-edge modifiers...



== Irregular quasi-hexagonal lattice: one TEM + words litteral

... are made of three binary words.



== Irregular quasi-hexagonal lattice: one TEM + random words

We shuffle the border by setting a random word for each.
There is some constrain here to conserve capacity and connectivity of the hextiles.
You can find this in the paper.



== Irregular quasi-hexagonal lattice: TEM + random words

This way we define a finite set of random triple-edge modifiers that cover the plane through bi-periodicity.



== Irregular quasi-hexagonal lattice: irregular hextile

This set of TEM produce irregular hextiles...



== Irregular quasi-hexagonal lattice: irregular hextile lattice

... that form a quasi-hexagonal lattice.



== Irregular Polyhex
-- Irregular Polyhexes catalog

Again, we can enumerate all possible fixed irregular trihexes on this lattice.

-- Irregular Subdivision rule

And for each of them, construct a subdivision rule.



== Comparison with previous works

The distribution of tiles barycenters is now free of spectral peaks and it's almost isotropic.
This distribution is a good base to build a high quality sampling system.



== Sampling generation (video)

To construct a sampling distribution we start with an irregular trihex, that we subdivide enough to the desired density.
From this tiling, we take the barycenters of all tiles.
( It give us a basic sample distribution with good spectral characteristics. )



== Sampling optimization: offset vectors

To reach the desired spectral target, we need to optimize the barycenters.
These local offsets are sufficient to greatly model the spectrum to our desire.



== Sampling optimization: local optimization

In order to store the offset vectors, we define indices that represent the local configuration of trihexes.
You can find detail on this part in the paper.
We optimize all this indices and thus all possible local arrangement of sample.
Then the final offset vectors are stored in a lookup table.



== Sampling optimization: multiple spectral target

Thus, for a different spectral target, we have to compute a different lookup table.



== Results Tile-based

Compare to previous tile-based methods, this system produce blue-noise distribution of much better quality.



== Results Blue noise

In fact, for blue-noise sampling, we produce distribution of equivalent quality than best state of the art blue-noise results.



== Results Step noise

We can also produce more specific distribution as with a general noise method.



== Results Forest

This spectral control allow to mimic existing distribution of a forest for example.



== Results Timing

In term of speed, we can generate more than a million points per seconds as previous tile-based methods.



== Results Adaptive (video)

From the hierarchical nature of our tiling system, it is possible to generate adaptive sampling of a density function.



== Overall Pipeline

To resume the whole system.
We have a big precomputation phase where we construct a set of subdivision rules that allow us to generate a hierarchical non-periodic tiling.
This tiling barycenters produce a basic sample distribution that is optimized to fit a particular spectral target.
The offset vectors obtain from this optimization are stored in a lookup table.

The runtime is very fast:
we only have to generate a tiling at the desired density;
Take barycenters of each tiles;
And apply the precomputed offsets vectors.



== Contributions

In this work, our contribution are:
A novel tiling system that is hierarchical, non-periodic and free of spectral peaks;
A novel sampling system that is fast and can generate adaptive distribution with a control over its spectral characteristics.